!function(){function n(n){return function(n){if(Array.isArray(n))return e(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||function(n,t){if(!n)return;if("string"==typeof n)return e(n,t);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return e(n,t)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function t(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function a(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}function r(n,e,t){return e&&a(n.prototype,e),t&&a(n,t),n}(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"EM1+":function(e,a,i){"use strict";i.r(a),i.d(a,"RepositoryModule",function(){return F});var o=i("mrSG"),s=i("fXoL"),c=i("ofXK"),d=i("tyNb"),l=i("c0TW"),u=i("3Pt+"),p=i("y8eJ"),m=i("ZfaG"),b=[u.n.pattern(/(?:git|ssh|https?|git@[-\w.]+):(\/\/)?(.*?)(\.git)(\/?|\#[-\d\w._]+?)$/),u.n.required,u.n.minLength(1)],f=function(){function n(e){t(this,n),this.assetApiService=e,this.saving=!1,this.saving_ip_index=-1,this.credentials$=this.assetApiService.getRepositoryCredential(),this.ip_addresses=new u.b([new u.d("",b)]),this.tmp$=1,this.myForm=new u.e({name:new u.d("",[u.n.required]),url:new u.d("",b),credential:new u.d("",[u.n.required])})}return r(n,[{key:"addNewIp",value:function(){this.ip_addresses.push(new u.d(""))}},{key:"ngOnInit",value:function(){}},{key:"removeAt",value:function(n){this.ip_addresses.removeAt(n)}},{key:"save",value:function(){this.saving=!0,this.assetApiService.addRepository(this.myForm.value).subscribe()}}]),n}();f.ctorParameters=function(){return[{type:p.a}]},f=Object(o.a)([Object(s.n)({selector:"app-repository-add",template:'<form [formGroup]="myForm" novalidate >\n\n  <nb-card @init>\n\n    <nb-card-header>\n\n      <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n        <nb-icon class="text-hint" icon="plus-circle">\n        </nb-icon>\n        <div fxFlex class="h6 text-hint">\n          Add Repository\n\n        </div>\n\n      </div>\n\n    </nb-card-header>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving" >\n \n        <input formControlName="name" fullWidth fxFlex="50%"  nbInput fieldSize="large"   [status]="name?.valid ? \'primary\' : \'basic\' "\n            placeholder="Name">\n\n  \n\n      </nb-form-field>\n\n    </nb-card-body>\n\n    <nb-card-body @init>\n      <nb-form-field [nbSpinner]="saving">\n        <div nbPrefix icon="at-outline" pack="eva">\n          Url\n\n        </div>\n        <input formControlName="url" nbInput fieldSize="medium" fxFlex [status]="url?.valid ? \'primary\' : \'basic\' "\n          fullWidth placeholder="Repository Url">\n\n        <button nbButton nbSuffix size="small" filled status="primary">\n          <nb-icon icon="close-outline">\n          </nb-icon>\n        </button>\n\n      </nb-form-field>\n\n    </nb-card-body>\n \n    <nb-card-body @init   >\n  <div  >\n\n\n      <div     fxLayout="row" class="credentials h6 text-hint  ">\n        Credentials\n      </div>\n\n      <div>\n        <nb-select formControlName="credential">\n          <nb-option [value]="credential?._id" *ngFor="let credential of credentials$ | async">\n            {{credential?.name}}\n          </nb-option>\n        </nb-select>\n      </div>\n\n      <div    class="credentials"   fxLayout="row">\n\n        <nb-radio-group   fxLayout="row" name="status" status="basic">\n          <nb-radio [checked]="true" value="none">\n            None\n          </nb-radio>\n\n          <nb-radio value="password">\n            Password\n          </nb-radio>\n\n          <nb-radio value="access_token">\n            Access token\n          </nb-radio>\n\n          <nb-radio value="privatekey">\n            SSH\n          </nb-radio>\n        </nb-radio-group>\n\n      </div>\n\n\n    <div   class="credentials  "   \n\n     fxLayout="column" fxLayoutGap="1rem">\n\n \n\n    </div>\n\n\n\n\n\n\n    </div>\n\n\n\n\n    </nb-card-body>\n\n\n\n\n\n\n\n\n\n    <nb-card-footer fxLayoutAlign="end center">\n\n\n\n\n      <button [disabled]="!myForm?.valid" (click)="save()" outline nbButton [status]="myForm?.valid ? \'success\': \'basic\'">\n\n        <nb-icon icon="checkmark-circle-2">\n        </nb-icon>\n        Save\n\n      </button>\n    </nb-card-footer>\n\n\n  </nb-card>\n</form>\n',animations:n(m.a),styles:["textarea {\n  font-weight: 450 !important;\n  color: #838080;\n  resize: none;\n}\n\n.nogap {\n  padding: 0rem !important;\n}\n\n.credentials {\n  margin: 1rem;\n}"]})],f);var v=[u.n.pattern(/(?:git|ssh|https?|git@[-\w.]+):(\/\/)?(.*?)(\.git)(\/?|\#[-\d\w._]+?)$/),u.n.required,u.n.minLength(1)],y=function(){function n(e){t(this,n),this.assetApiService=e,this.saving=!1,this.saving_ip_index=-1,this.auth$=new u.e({username:new u.d("",[u.n.required]),password:new u.d("",[u.n.required])}),this.access_token$=new u.e({access_token:new u.d("",[u.n.required])}),this.private_key$=new u.e({private_key:new u.d("",[u.n.required])}),this.ip_addresses=new u.b([new u.d("",v)]),this.tmp$=1,this.myForm=new u.e({name:new u.d("",[u.n.required]),mode:new u.d("none"),auth:new u.e({})})}return r(n,[{key:"addNewIp",value:function(){this.ip_addresses.push(new u.d(""))}},{key:"ngOnInit",value:function(){var n=this;this.myForm.get("mode").valueChanges.subscribe(function(e){switch(console.log("d",e),e){case"none":n.myForm.setControl("auth",null);break;case"credentials":n.myForm.setControl("auth",n.auth$);break;case"access_token":n.myForm.setControl("auth",n.access_token$);break;case"private_key":n.myForm.setControl("auth",n.private_key$)}})}},{key:"removeAt",value:function(n){this.ip_addresses.removeAt(n)}},{key:"save",value:function(){this.saving=!0;var n=this.myForm.value;n={name:n.name,credential:Object.assign(Object.assign({},n.auth),{mode:n.mode})},this.assetApiService.addRepositoryCredential(n).subscribe()}}]),n}();y.ctorParameters=function(){return[{type:p.a}]},y=Object(o.a)([Object(s.n)({selector:"app-repository-credential",template:'<form [formGroup]="myForm" novalidate>\n\n    <nb-card>\n\n        <nb-card-header>\n\n            <div fxFlex fxLayoutGap="1rem" fxLayoutAlign="center center">\n\n                <nb-icon class="text-hint" icon="plus-circle">\n                </nb-icon>\n                <div fxFlex class="h6 text-hint">\n                    Manage Credentials\n\n                </div>\n\n            </div>\n\n        </nb-card-header>\n\n        <nb-card-body>\n            <nb-form-field [nbSpinner]="saving">\n\n                <input formControlName="name" fullWidth fxFlex="50%" nbInput fieldSize="large"\n                    [status]="name?.valid ? \'primary\' : \'basic\' " placeholder="Name">\n\n\n\n            </nb-form-field>\n\n        </nb-card-body>\n\n\n        <nb-card-body>\n            <div>\n\n\n                <div fxLayout="row" class="credentials h6 text-hint  ">\n                    Credentials\n                </div>\n\n                <div class="credentials" fxLayout="row">\n\n                    <nb-radio-group formControlName="mode" fxLayout="row" name="status" status="basic">\n                        <nb-radio [checked]="true" value="none">\n                            None\n                        </nb-radio>\n\n                        <nb-radio value="credentials">\n                            Credentials\n                        </nb-radio>\n\n                        <nb-radio value="access_token">\n                            Access token\n                        </nb-radio>\n\n                        <nb-radio value="private_key">\n                            SSH\n                        </nb-radio>\n                    </nb-radio-group>\n\n                </div>\n\n\n                <div class="credentials  " formGroupName="auth" fxLayout="column" fxLayoutGap="1rem">\n\n\n                    <ng-container [ngSwitch]="myForm.get(\'mode\').value">\n\n\n                        <ng-container *ngSwitchCase="\'none\'">\n\n                        </ng-container>\n\n\n                        <ng-container *ngSwitchCase="\'credentials\'">\n                            <nb-form-field>\n\n                                <input formControlName="username" nbInput fieldSize="medium" status="primary"\n                                    placeholder="Username">\n\n                                <button nbButton nbSuffix size="small" filled status="primary">\n                                    <nb-icon icon="close-outline">\n                                    </nb-icon>\n                                </button>\n\n                            </nb-form-field>\n\n\n                            <nb-form-field>\n\n                                <input formControlName="password" nbInput fieldSize="medium" status="primary"\n                                    placeholder="Password">\n\n                                <button nbButton nbSuffix size="small" filled status="primary">\n                                    <nb-icon icon="close-outline">\n                                    </nb-icon>\n                                </button>\n\n                            </nb-form-field>\n                        </ng-container>\n\n\n\n\n                        <ng-container *ngSwitchCase="\'access_token\'">\n\n\n\n                            <textarea formControlName="access_token" rows="7" status="primary" nbInput fullWidth\n                                placeholder="Access Token"></textarea>\n\n\n                        </ng-container>\n\n\n                        <ng-container *ngSwitchCase="\'private_key\'">\n                            <textarea formControlName="private_key" rows="7" status="primary" nbInput fullWidth\n                                placeholder="SSH Key"></textarea>\n                        </ng-container>\n                    </ng-container>\n\n\n                </div>\n\n\n\n\n\n\n            </div>\n\n\n\n\n        </nb-card-body>\n\n\n\n\n\n\n\n\n\n        <nb-card-footer fxLayoutAlign="end center">\n\n\n\n\n            <button [disabled]="!myForm?.valid" (click)="save()" outline nbButton\n                [status]="myForm?.valid ? \'success\': \'basic\'">\n\n                <nb-icon icon="checkmark-circle-2">\n                </nb-icon>\n                Save\n\n            </button>\n        </nb-card-footer>\n\n\n    </nb-card>\n</form>',styles:["textarea {\n  font-weight: 450 !important;\n  color: #838080;\n  resize: none;\n}\n\n.nogap {\n  padding: 0rem !important;\n}\n\n.credentials {\n  margin: 1rem;\n}"]})],y);var h=function(){function n(){t(this,n)}return r(n,[{key:"ngOnInit",value:function(){}}]),n}();h.ctorParameters=function(){return[]},h=Object(o.a)([Object(s.n)({selector:"app-repository-home",template:"<app-repository-search></app-repository-search>\nList\n<app-repository-list></app-repository-list>\nAdd\n<app-repository-add></app-repository-add>\n\x3c!-- dsad --\x3e",styles:[""]})],h);var g=[{path:"",children:[{path:"add",component:f,data:{id:l.c.IosCreate}},{path:"credentials",component:y,data:{id:l.c.IosCreate}},{path:"**",component:h,data:{id:l.c.IosConfigure}}]}],w=function n(){t(this,n)};w=Object(o.a)([Object(s.N)({imports:[d.j.forChild(g)],exports:[d.j]})],w);var x=function(){function n(e,a,r){t(this,n),this.el=e,this.document=a,this.assetApiService=r,this.selected_host_list_item=-1,this.assets=[]}return r(n,[{key:"ngOnInit",value:function(){var n=this;this.assetApiService.getRepository().subscribe(function(e){n.assets=e})}}]),n}();x.ctorParameters=function(){return[{type:s.v},{type:Document,decorators:[{type:s.D,args:[c.d]}]},{type:p.a}]},x.propDecorators={template:[{type:s.qb,args:["template",{static:!1}]}]},x=Object(o.a)([Object(s.n)({selector:"app-repository-list",template:'<div fxFlex class="container">\n\n \n    <div class="scsroll" fxLayout="column">\n  \n      <ng-container *ngFor="let web_app of assets ; index as index">\n  \n        <div fxLayout="column" (click)="detailedView(index)">\n  \n          <div       [class.selected]="selected_web_app_list_item == index " fxLayout="row" fxFlex>\n  \n            <div appHoverColor appBorder fxFlex fxLayoutAlign="center center" fxLayoutGap="1rem" class="list-item">\n  \n              <ng-container *ngIf="web_app?.health == \'up\' ; else healthDown">\n  \n                <nb-icon class="health-up " icon="arrow-up">\n  \n                </nb-icon>\n              </ng-container>\n              <ng-template #healthDown>\n                <nb-icon class="health-down " icon="arrow-down">\n  \n                </nb-icon>\n              </ng-template>\n  \n              <div appHoverColor fxFlex fxLayoutAlign="start center" class="list-item">\n  \n  \n                <span class="marL list-item-head">\n                  {{web_app.url}}\n  \n                </span>\n              </div>\n  \n            </div>\n            <div appHoverColor appBorder fxFlex="150px" fxLayoutAlign="center center" class="list-item">\n              {{web_app.group || \'None\'}}\n  \n            </div>\n  \n  \n  \n            <div appHoverColor appBorder fxFlex="180px" fxLayoutAlign="center center" class="list-item">\n              {{web_app.dou | date}}\n            </div>\n          </div>\n  \n        </div>\n      </ng-container>\n  \n    </div>\n  \n  </div>\n  \n  \n  \n  <ng-template #template>\n  \n    <app-web_app-add></app-web_app-add>\n  \n  \n  </ng-template>\n  ',styles:[""]})],x);var k=function(){function n(){t(this,n)}return r(n,[{key:"ngOnInit",value:function(){}}]),n}();k.ctorParameters=function(){return[]},k=Object(o.a)([Object(s.n)({selector:"app-repository-search",template:"<p>repository-search works!</p>\n",styles:[""]})],k);var _=i("rDax"),S=i("XiUz"),C=i("aceb"),A=i("IwCi"),F=function n(){t(this,n)};F=Object(o.a)([Object(s.N)({declarations:[h,x,k,f,y],imports:[c.c,w,A.a,S.a,C.o,C.l,C.n,_.g,C.p,C.G,u.f,u.m,C.A,C.l,C.y,C.v]})],F)}}])}();